AWSTemplateFormatVersion: '2010-09-09'
Description: 'Application Load Balancer for Bloomin'

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC ID

  PublicSubnet1:
    Type: AWS::EC2::Subnet::Id
    Description: Public Subnet 1

  PublicSubnet2:
    Type: AWS::EC2::Subnet::Id
    Description: Public Subnet 2

  EcsSecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
    Description: ECS Cluster Security Group ID

  Environment:
    Type: String
    Default: production
    Description: Environment name (e.g., production, staging)

Resources:
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub ${AWS::StackName}-alb
      Scheme: internet-facing
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: '60'
      Subnets:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      SecurityGroups:
        - !Ref EcsSecurityGroupId
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-alb
        - Key: Environment
          Value: !Ref Environment

  HTTPListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: redirect
          RedirectConfig:
            Protocol: HTTPS
            Port: '443'
            Host: '#{host}'
            Path: '/#{path}'
            Query: '#{query}'
            StatusCode: HTTP_301

  HTTPSListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Port: 443
      Protocol: HTTPS
      Certificates:
        - CertificateArn: !Ref CertificateArn
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub ${AWS::StackName}-tg
      Port: 3000
      Protocol: HTTP
      TargetType: ip
      VpcId: !Ref VpcId
      HealthCheckPath: /health
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 3
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: '30'

  CertificateArn:
    Type: String
    Description: ARN of the SSL certificate for HTTPS

Outputs:
  LoadBalancerArn:
    Description: ARN of the load balancer
    Value: !Ref LoadBalancer
    Export:
      Name: !Sub ${AWS::StackName}-LoadBalancerArn

  LoadBalancerDNS:
    Description: DNS name of the load balancer
    Value: !GetAtt LoadBalancer.DNSName
    Export:
      Name: !Sub ${AWS::StackName}-LoadBalancerDNS

  TargetGroupArn:
    Description: ARN of the target group
    Value: !Ref TargetGroup
    Export:
      Name: !Sub ${AWS::StackName}-TargetGroupArn 